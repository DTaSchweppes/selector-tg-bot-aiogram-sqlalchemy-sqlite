from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from configuration import dp, Session, bot, session
from models.vendor import Vendor


@dp.message_handler(commands=["vendors"], state="*")
async def show_vendors_page(message: types.Message, state: FSMContext):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ)
    current_page = await state.get_state()

    # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∑–∞–¥–∞–Ω–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–µ –Ω–∞ 1
    if not current_page:
        current_page = 1

    # –ó–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    per_page = 5  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    offset = (current_page - 1) * per_page  # –°–º–µ—â–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π
    vendors = session.query(Vendor).limit(per_page).offset(offset).all()

    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞—Ö
    response_message = "–°–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:\n"
    for vendor in vendors:
        response_message += f"üì¶–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: {vendor.name}\n" \
                            f"üåê–ê–¥—Ä–µ—Å: {vendor.address}\n" \
                            f"üíº–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {vendor.category}\n" \
                            f"‚¨ÜÔ∏è–†–µ–π—Ç–∏–Ω–≥: {vendor.rating}\n\n"

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    keyboard = InlineKeyboardMarkup(row_width=2)
    previous_button = InlineKeyboardButton("–ü—Ä–µ–¥—ã–¥—É—â–∞—è", callback_data="previous_page")
    next_button = InlineKeyboardButton("–°–ª–µ–¥—É—é—â–∞—è", callback_data="next_page")
    keyboard.add(previous_button, next_button)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞—Ö –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    await message.answer(response_message, reply_markup=keyboard)
@dp.callback_query_handler(lambda c: c.data in ["previous_page", "next_page"],
                                       state="*")
async def handle_pagination_buttons(callback_query: types.CallbackQuery, state: FSMContext):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ
    button = callback_query.data

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_page = int(await state.get_state())

    if button == "previous_page":
        # –ï—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–∞—è", —É–º–µ–Ω—å—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ 1
        current_page -= 1
    elif button == "next_page":
        # –ï—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–°–ª–µ–¥—É—é—â–∞—è", —É–≤–µ–ª–∏—á—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ 1
        current_page += 1

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.set_state(str(current_page))

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞—Ö –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    vendors_message_id = callback_query.message.message_id
    await bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=vendors_message_id,
                                text="–ó–∞–≥—Ä—É–∑–∫–∞...", reply_markup=None)
    await show_vendors_page(callback_query.message, state)

    await callback_query.answer()